for (n in c(20, 50, 200, 500, 2000)) {
dt.results <- data.table(ID = 1:1000)
v.abserror <- c()
# n = 20
for (i in 1:1000) {
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt.X1 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X1"), value.name = "X1", variable.name = "t")
dt.X2 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X2"), value.name = "X2", variable.name = "t")
dt.Y <- melt(dt, id.vars = c("i"), measure.vars = patterns("^Y"), value.name = "Y", variable.name = "t")
dt.X1[, t := fifelse(t == "X11", 1, 2)]
dt.X2[, t := fifelse(t == "X21", 1, 2)]
dt.Y[, t := fifelse(t == "Y1", 1, 2)]
dt <- merge(dt.X1, dt.X2, by = c("i", "t"))
dt <- merge(dt, dt.Y, by = c("i", "t"))
pdf <- pdata.frame(dt, index = c("i", "t"), drop.index = TRUE)
try(m.test <- pldv(Y ~ X1 + X2, data = pdf, model = "fd", objfun = "lsq", sample = "cens"),
silent = TRUE)
a <- m.test$coefficients[1]
b1 <- m.test$coefficients[2]
b2 <- m.test$coefficients[3]
dt.results[ID == i, beta1 := b1][ID == i, beta2 := b2]
# dt[, resid := Y - max(0, a + b1*X1 + b2*X2), by = .(i,t)]
# dt.results[ID == i, RMSE1 := sd(dt$resid)]
# dt.results[ID == i, RMSE2 := sd(m.test$residuals)]
# v.abserror <- append(v.abserror, dt$resid)
}
dt.output[nObs == n & beta == "b1", bias := mean(dt.results$beta1 - 1)]
dt.output[nObs == n & beta == "b2", bias := mean(dt.results$beta2 - 1)]
dt.output[nObs == n & beta == "b1", RMSE := sqrt(mean((dt.results$beta1 - 1)^2))]
dt.output[nObs == n & beta == "b2", RMSE := sqrt(mean((dt.results$beta2 - 1)^2))]
dt.output[nObs == n & beta == "b1", LQ := quantile(dt.results$beta1, .25)]
dt.output[nObs == n & beta == "b1", Median := quantile(dt.results$beta1, .5)]
dt.output[nObs == n & beta == "b1", QU := quantile(dt.results$beta1, .75)]
dt.output[nObs == n & beta == "b2", LQ := quantile(dt.results$beta2, .25)]
dt.output[nObs == n & beta == "b2", Median := quantile(dt.results$beta2, .5)]
dt.output[nObs == n & beta == "b2", QU := quantile(dt.results$beta2, .75)]
dt.output[nObs == n & beta == "b1", MAE := median(abs(dt.results$beta1 - 1))]
dt.output[nObs == n & beta == "b2", MAE := median(abs(dt.results$beta2 - 1))]
}
View(dt.output)
?rgamma
?rchisq
(rchisq(100, df = 3) - 3)/3
tmp <- (rchisq(100, df = 3) - 3)/3
mean(tmp)
var(tmp)
tmp <- (rchisq(100000, df = 3) - 3)/3
mean(tmp)
var(tmp)
tmp <- (rchisq(100000, df = 3) - 3)/sqrt(6)
var(tmp)
mean(tmp)
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
table(dt$Y1 > 0, dt$Y2 > 0)
table(dt$Y1 > 0, dt$Y2 > 0)/1000
View(dt)
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
table(dt$Y1 > 0, dt$Y2 > 0)/2000
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(plm, data.table, statmod)
set.seed(42)
betas <- c(1,1)
dt.output <- data.table(nObs = rep(c(20, 20, 50, 50, 200, 200, 500, 500, 2000, 2000), 3),
beta = rep(rep(c("b1", "b2"), 5),3), true = 1, spec = c(rep(1, 10), rep(2, 10), rep(3, 10)))
View(dt.output)
?condition
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(plm, data.table, statmod)
set.seed(42)
betas <- c(1,1)
dt.output <- data.table(nObs = rep(c(20, 20, 50, 50, 200, 200, 500, 500, 2000, 2000), 3),
beta = rep(rep(c("b1", "b2"), 5),3), true = 1, spec = c(rep(1, 10), rep(2, 10), rep(3, 10)))
spc <- 1
for (n in c(20, 50, 200, 500, 2000)) {
dt.results <- data.table(ID = 1:1000)
for (i in 1:1000) {
if (spc == 1) {
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
}
else if (spc == 2) {
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
}
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt.X1 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X1"), value.name = "X1", variable.name = "t")
dt.X2 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X2"), value.name = "X2", variable.name = "t")
dt.Y <- melt(dt, id.vars = c("i"), measure.vars = patterns("^Y"), value.name = "Y", variable.name = "t")
dt.X1[, t := fifelse(t == "X11", 1, 2)]
dt.X2[, t := fifelse(t == "X21", 1, 2)]
dt.Y[, t := fifelse(t == "Y1", 1, 2)]
dt <- merge(dt.X1, dt.X2, by = c("i", "t"))
dt <- merge(dt, dt.Y, by = c("i", "t"))
pdf <- pdata.frame(dt, index = c("i", "t"), drop.index = TRUE)
try(m.test <- pldv(Y ~ X1 + X2, data = pdf, model = "fd", objfun = "lsq", sample = "cens"),
silent = TRUE)
dt.results[ID == i, beta1 := m.test$coefficients[2]][ID == i, beta2 := m.test$coefficients[3]]
}
dt.output[nObs == n & spec == spc & beta == "b1", bias := mean(dt.results$beta1 - 1)]
dt.output[nObs == n & spec == spc & beta == "b2", bias := mean(dt.results$beta2 - 1)]
dt.output[nObs == n & spec == spc & beta == "b1", RMSE := sqrt(mean((dt.results$beta1 - 1)^2))]
dt.output[nObs == n & spec == spc & beta == "b2", RMSE := sqrt(mean((dt.results$beta2 - 1)^2))]
dt.output[nObs == n & spec == spc & beta == "b1", LQ := quantile(dt.results$beta1, .25)]
dt.output[nObs == n & spec == spc & beta == "b1", Median := quantile(dt.results$beta1, .5)]
dt.output[nObs == n & spec == spc & beta == "b1", QU := quantile(dt.results$beta1, .75)]
dt.output[nObs == n & spec == spc & beta == "b2", LQ := quantile(dt.results$beta2, .25)]
dt.output[nObs == n & spec == spc & beta == "b2", Median := quantile(dt.results$beta2, .5)]
dt.output[nObs == n & spec == spc & beta == "b2", QU := quantile(dt.results$beta2, .75)]
dt.output[nObs == n & spec == spc & beta == "b1", MAE := median(abs(dt.results$beta1 - 1))]
dt.output[nObs == n & spec == spc & beta == "b2", MAE := median(abs(dt.results$beta2 - 1))]
}
View(dt.output)
spc <- 2
for (n in c(20, 50, 200, 500, 2000)) {
dt.results <- data.table(ID = 1:1000)
for (i in 1:1000) {
if (spc == 1) {
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
}
else if (spc == 2) {
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
}
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt.X1 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X1"), value.name = "X1", variable.name = "t")
dt.X2 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X2"), value.name = "X2", variable.name = "t")
dt.Y <- melt(dt, id.vars = c("i"), measure.vars = patterns("^Y"), value.name = "Y", variable.name = "t")
dt.X1[, t := fifelse(t == "X11", 1, 2)]
dt.X2[, t := fifelse(t == "X21", 1, 2)]
dt.Y[, t := fifelse(t == "Y1", 1, 2)]
dt <- merge(dt.X1, dt.X2, by = c("i", "t"))
dt <- merge(dt, dt.Y, by = c("i", "t"))
pdf <- pdata.frame(dt, index = c("i", "t"), drop.index = TRUE)
try(m.test <- pldv(Y ~ X1 + X2, data = pdf, model = "fd", objfun = "lsq", sample = "cens"),
silent = TRUE)
dt.results[ID == i, beta1 := m.test$coefficients[2]][ID == i, beta2 := m.test$coefficients[3]]
}
dt.output[nObs == n & spec == spc & beta == "b1", bias := mean(dt.results$beta1 - 1)]
dt.output[nObs == n & spec == spc & beta == "b2", bias := mean(dt.results$beta2 - 1)]
dt.output[nObs == n & spec == spc & beta == "b1", RMSE := sqrt(mean((dt.results$beta1 - 1)^2))]
dt.output[nObs == n & spec == spc & beta == "b2", RMSE := sqrt(mean((dt.results$beta2 - 1)^2))]
dt.output[nObs == n & spec == spc & beta == "b1", LQ := quantile(dt.results$beta1, .25)]
dt.output[nObs == n & spec == spc & beta == "b1", Median := quantile(dt.results$beta1, .5)]
dt.output[nObs == n & spec == spc & beta == "b1", QU := quantile(dt.results$beta1, .75)]
dt.output[nObs == n & spec == spc & beta == "b2", LQ := quantile(dt.results$beta2, .25)]
dt.output[nObs == n & spec == spc & beta == "b2", Median := quantile(dt.results$beta2, .5)]
dt.output[nObs == n & spec == spc & beta == "b2", QU := quantile(dt.results$beta2, .75)]
dt.output[nObs == n & spec == spc & beta == "b1", MAE := median(abs(dt.results$beta1 - 1))]
dt.output[nObs == n & spec == spc & beta == "b2", MAE := median(abs(dt.results$beta2 - 1))]
}
View(dt.output)
dt <- as.data.table(sapply(1:5, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
ep <- as.data.table(sapply(1:2, function(x) rnorm(n)))
merge(dt, ep)
View(dt)
View(ep)
?merge
dt <- merge(dt[, ID := .I], ep[, ID := .I], by = c("ID"))
dt
dt[, ID := NULL]
dt
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt
spc <- 3
for (n in c(20, 50, 200, 500, 2000)) {
dt.results <- data.table(ID = 1:1000)
for (i in 1:1000) {
if (spc == 1) {
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
}
else if (spc == 2) {
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
}
else if (spc == 3) {
dt <- as.data.table(sapply(1:5, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
ep <- as.data.table(sapply(1:2, function(x) rnorm(n)))
dt <- merge(dt[, ID := .I], ep[, ID := .I], by = c("ID"))
dt[, ID := NULL]
}
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt.X1 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X1"), value.name = "X1", variable.name = "t")
dt.X2 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X2"), value.name = "X2", variable.name = "t")
dt.Y <- melt(dt, id.vars = c("i"), measure.vars = patterns("^Y"), value.name = "Y", variable.name = "t")
dt.X1[, t := fifelse(t == "X11", 1, 2)]
dt.X2[, t := fifelse(t == "X21", 1, 2)]
dt.Y[, t := fifelse(t == "Y1", 1, 2)]
dt <- merge(dt.X1, dt.X2, by = c("i", "t"))
dt <- merge(dt, dt.Y, by = c("i", "t"))
pdf <- pdata.frame(dt, index = c("i", "t"), drop.index = TRUE)
try(m.test <- pldv(Y ~ X1 + X2, data = pdf, model = "fd", objfun = "lsq", sample = "cens"),
silent = TRUE)
dt.results[ID == i, beta1 := m.test$coefficients[2]][ID == i, beta2 := m.test$coefficients[3]]
}
dt.output[nObs == n & spec == spc & beta == "b1", bias := mean(dt.results$beta1 - 1)]
dt.output[nObs == n & spec == spc & beta == "b2", bias := mean(dt.results$beta2 - 1)]
dt.output[nObs == n & spec == spc & beta == "b1", RMSE := sqrt(mean((dt.results$beta1 - 1)^2))]
dt.output[nObs == n & spec == spc & beta == "b2", RMSE := sqrt(mean((dt.results$beta2 - 1)^2))]
dt.output[nObs == n & spec == spc & beta == "b1", LQ := quantile(dt.results$beta1, .25)]
dt.output[nObs == n & spec == spc & beta == "b1", Median := quantile(dt.results$beta1, .5)]
dt.output[nObs == n & spec == spc & beta == "b1", QU := quantile(dt.results$beta1, .75)]
dt.output[nObs == n & spec == spc & beta == "b2", LQ := quantile(dt.results$beta2, .25)]
dt.output[nObs == n & spec == spc & beta == "b2", Median := quantile(dt.results$beta2, .5)]
dt.output[nObs == n & spec == spc & beta == "b2", QU := quantile(dt.results$beta2, .75)]
dt.output[nObs == n & spec == spc & beta == "b1", MAE := median(abs(dt.results$beta1 - 1))]
dt.output[nObs == n & spec == spc & beta == "b2", MAE := median(abs(dt.results$beta2 - 1))]
}
View(dt.output)
?write_xl
pacman::p_load(plm, data.table, statmod, writexl)
write_xlsx(dt.output, path = "Honore 1992 Replication - Table 1.xlsx")
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(c(1,1,0,0,0)))
View(dt.output)
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(betas))
View(dt.output)
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(betas, 4))
View(dt.output)
# Table 2
n <-  200
betas <- c(1,1,0,0,0)
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(betas, 4))
View(dt.output)
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(betas, 4), spec = c(rep(4, 5), rep(5,5), rep(6,5), rep(7,5)))
View(dt.output)
dt <- as.data.table(sapply(1:13, function(x) rnorm(n)))
n <-  200
betas <- c(1,1,0,0,0)
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(betas, 4),
spec = c(rep(4, 5), rep(5,5), rep(6,5), rep(7,5)))
dt.results <- data.table(ID = 1:1000)
dt <- as.data.table(sapply(1:13, function(x) rnorm(n)))
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "X31", "X32", "X41", "X42", "X51", "X52", "ep1", "ep2")
dt
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt.X1 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X1"), value.name = "X1", variable.name = "t")
dt.X2 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X2"), value.name = "X2", variable.name = "t")
dt.Y <- melt(dt, id.vars = c("i"), measure.vars = patterns("^Y"), value.name = "Y", variable.name = "t")
dt.X1[, t := fifelse(t == "X11", 1, 2)]
dt.X2[, t := fifelse(t == "X21", 1, 2)]
dt.Y[, t := fifelse(t == "Y1", 1, 2)]
dt <- merge(dt.X1, dt.X2, by = c("i", "t"))
dt <- merge(dt, dt.Y, by = c("i", "t"))
View(dt)
dt[, X3 := rnorm()]
dt[, X3 := rnorm(1)]
View(dt)
dt[, X3 := rnorm(n*2)]
View(dt)
n <-  200
betas <- c(1,1,0,0,0)
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(betas, 4),
spec = c(rep(4, 5), rep(5,5), rep(6,5), rep(7,5)))
dt.results <- data.table(ID = 1:1000)
spc <- 4
for (i in 1:1000) {
if (spc == 4) {
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
}
else if (spc == 2) {
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
}
else if (spc == 3) {
dt <- as.data.table(sapply(1:5, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
ep <- as.data.table(sapply(1:2, function(x) rnorm(n)))
dt <- merge(dt[, ID := .I], ep[, ID := .I], by = c("ID"))
dt[, ID := NULL]
}
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt.X1 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X1"), value.name = "X1", variable.name = "t")
dt.X2 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X2"), value.name = "X2", variable.name = "t")
dt.Y <- melt(dt, id.vars = c("i"), measure.vars = patterns("^Y"), value.name = "Y", variable.name = "t")
dt.X1[, t := fifelse(t == "X11", 1, 2)]
dt.X2[, t := fifelse(t == "X21", 1, 2)]
dt.Y[, t := fifelse(t == "Y1", 1, 2)]
dt <- merge(dt.X1, dt.X2, by = c("i", "t"))
dt <- merge(dt, dt.Y, by = c("i", "t"))
if (spc %in% c(4,5,6)) {
dt[, X3 := rnorm(n*2)][, X4 := rnorm(n*2)][, X5 := rnorm(n*2)]
}
pdf <- pdata.frame(dt, index = c("i", "t"), drop.index = TRUE)
try(m.test <- pldv(Y ~ X1 + X2 + X3 + X4 + X5, data = pdf, model = "fd", objfun = "lsq", sample = "cens"),
silent = TRUE)
dt.results[ID == i, beta1 := m.test$coefficients[2]][ID == i, beta2 := m.test$coefficients[3]]
dt.results[ID == i, beta3 := m.test$coefficients[4]][ID == i, beta4 := m.test$coefficients[5]]
dt.results[ID == i, beta5 := m.test$coefficients[6]]
}
dt.output[nObs == n & spec == spc & beta == "b1", bias := mean(dt.results$beta1 - 1)]
n <-  200
betas <- c(1,1,0,0,0)
dt.output <- data.table(beta = rep(c("b1", "b2", "b3", "b4", "b5"), 4), True = rep(betas, 4),
spec = c(rep(4, 5), rep(5,5), rep(6,5), rep(7,5)))
dt.results <- data.table(ID = 1:1000)
spc <- 4
for (i in 1:1000) {
if (spc == 4) {
dt <- as.data.table(sapply(1:7, function(x) rnorm(n)))
}
else if (spc == 2) {
dt <- as.data.table(sapply(1:7, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
}
else if (spc == 3) {
dt <- as.data.table(sapply(1:5, function(x) (rchisq(n, df = 3) - 3))/sqrt(6))
ep <- as.data.table(sapply(1:2, function(x) rnorm(n)))
dt <- merge(dt[, ID := .I], ep[, ID := .I], by = c("ID"))
dt[, ID := NULL]
}
colnames(dt) <- c("alpha", "eta1", "eta2", "X21", "X22", "ep1", "ep2")
dt[, i := .I]
dt[, X11 := alpha + eta1][, X12 := alpha + eta2]
dt[, Y1 := max(0, alpha + betas[1]*X11 + betas[2]*X21 + ep1), by = row.names(dt)]
dt[, Y2 := max(0, alpha + betas[1]*X12 + betas[2]*X22 + ep2), by = row.names(dt)]
dt.X1 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X1"), value.name = "X1", variable.name = "t")
dt.X2 <- melt(dt, id.vars = c("i"), measure.vars = patterns("^X2"), value.name = "X2", variable.name = "t")
dt.Y <- melt(dt, id.vars = c("i"), measure.vars = patterns("^Y"), value.name = "Y", variable.name = "t")
dt.X1[, t := fifelse(t == "X11", 1, 2)]
dt.X2[, t := fifelse(t == "X21", 1, 2)]
dt.Y[, t := fifelse(t == "Y1", 1, 2)]
dt <- merge(dt.X1, dt.X2, by = c("i", "t"))
dt <- merge(dt, dt.Y, by = c("i", "t"))
if (spc %in% c(4,5,6)) {
dt[, X3 := rnorm(n*2)][, X4 := rnorm(n*2)][, X5 := rnorm(n*2)]
}
pdf <- pdata.frame(dt, index = c("i", "t"), drop.index = TRUE)
try(m.test <- pldv(Y ~ X1 + X2 + X3 + X4 + X5, data = pdf, model = "fd", objfun = "lsq", sample = "cens"),
silent = TRUE)
dt.results[ID == i, beta1 := m.test$coefficients[2]][ID == i, beta2 := m.test$coefficients[3]]
dt.results[ID == i, beta3 := m.test$coefficients[4]][ID == i, beta4 := m.test$coefficients[5]]
dt.results[ID == i, beta5 := m.test$coefficients[6]]
}
dt.output[spec == spc & beta == "b1", bias := mean(dt.results$beta1 - 1)]
dt.output[spec == spc & beta == "b2", bias := mean(dt.results$beta2 - 1)]
dt.output[spec == spc & beta == "b3", bias := mean(dt.results$beta3 - 1)]
dt.output[spec == spc & beta == "b4", bias := mean(dt.results$beta4 - 1)]
dt.output[spec == spc & beta == "b5", bias := mean(dt.results$beta5 - 1)]
dt.output[spec == spc & beta == "b1", RMSE := sqrt(mean((dt.results$beta1 - 1)^2))]
dt.output[spec == spc & beta == "b2", RMSE := sqrt(mean((dt.results$beta2 - 1)^2))]
dt.output[spec == spc & beta == "b3", RMSE := sqrt(mean((dt.results$beta3 - 1)^2))]
dt.output[spec == spc & beta == "b4", RMSE := sqrt(mean((dt.results$beta4 - 1)^2))]
dt.output[spec == spc & beta == "b5", RMSE := sqrt(mean((dt.results$beta5 - 1)^2))]
# Percentiles
dt.output[spec == spc & beta == "b1", LQ := quantile(dt.results$beta1, .25)]
dt.output[spec == spc & beta == "b1", Median := quantile(dt.results$beta1, .5)]
dt.output[spec == spc & beta == "b1", QU := quantile(dt.results$beta1, .75)]
dt.output[spec == spc & beta == "b2", LQ := quantile(dt.results$beta2, .25)]
dt.output[spec == spc & beta == "b2", Median := quantile(dt.results$beta2, .5)]
dt.output[spec == spc & beta == "b2", QU := quantile(dt.results$beta2, .75)]
dt.output[spec == spc & beta == "b3", LQ := quantile(dt.results$beta3, .25)]
dt.output[spec == spc & beta == "b3", Median := quantile(dt.results$beta3, .5)]
dt.output[spec == spc & beta == "b3", QU := quantile(dt.results$beta3, .75)]
dt.output[spec == spc & beta == "b4", LQ := quantile(dt.results$beta4, .25)]
dt.output[spec == spc & beta == "b4", Median := quantile(dt.results$beta4, .5)]
dt.output[spec == spc & beta == "b4", QU := quantile(dt.results$beta4, .75)]
dt.output[spec == spc & beta == "b5", LQ := quantile(dt.results$beta5, .25)]
dt.output[spec == spc & beta == "b5", Median := quantile(dt.results$beta5, .5)]
dt.output[spec == spc & beta == "b5", QU := quantile(dt.results$beta5, .75)]
# MAE
dt.output[spec == spc & beta == "b1", MAE := median(abs(dt.results$beta1 - 1))]
dt.output[spec == spc & beta == "b2", MAE := median(abs(dt.results$beta2 - 1))]
dt.output[spec == spc & beta == "b3", MAE := median(abs(dt.results$beta3 - 1))]
dt.output[spec == spc & beta == "b4", MAE := median(abs(dt.results$beta4 - 1))]
dt.output[spec == spc & beta == "b5", MAE := median(abs(dt.results$beta5 - 1))]
View(dt.output)
?pnorm
pnorm(0)
pnorm(1)
64-67.3
-3.3/9.65
pnorm(-.34197)
67-64.3
2.7/9.1
pnorm(.2967)
?runif
rolls <- 1:20
sample(rolls, 6, replace = TRUE)
function areTwo20(x) {
areTwo20 <- function(x) {
return( ((x[1] == 20 & x[2] == 20) | (x[1] == 20 & x[3] == 20) | (x[2] == 20 & x[3] == 20)) & (x[1] == 20 & x[2] == 20 & x[3] == 20) )
}
sample(rolls, 6, replace = TRUE)
areTwo20 <- function(x) {
return( ((x[1] == 20 & x[2] == 20) | (x[1] == 20 & x[3] == 20) | (x[2] == 20 & x[3] == 20)) & (x[1] == 20 & x[2] == 20 & x[3] == 20) )
}
?lapply
dt <- rbindlist(lapply(1:1000, sample(rolls, 3, replace = TRUE)))
pacman::p_load(data.table)
dt <- rbindlist(lapply(1:1000, sample(rolls, 3, replace = TRUE)))
dt <- dt(ID = 1:1000)
?dt
dt <- data.table(ID = 1:1000)
dt[, r1 := sample(rolls, 1, replace = TRUE)]
View(dt)
dt <- data.table(ID = 1:1000, n = 1)
head(dt)
dt[, r1 := sample(rolls, n, replace = TRUE)]
dt <- data.table(ID = 1:1000)
dt[, r1 := sample(rolls, 1000, replace = TRUE)]
View(dt)
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table)
rolls <- 1:20
len <- 1000
dt <- data.table(ID = 1:len, r1  = sample(rolls, len, replace = TRUE), r2 = sample(rolls, len, replace = TRUE), r3 = sample(rolls, len, replace = TRUE))
View(dt)
areTwo20 <- function(x1, x2, x3) {
return( ((x1 == 20 & x2 == 20) | (x1 == 20 & x3 == 20) | (x2 == 20 & x3 == 20)) & !(x1 == 20 & x2 == 20 & x3 == 20) )
}
dt[, win := areTwo20(r1, r2, r3)]
dt[win]
dt[win == TRUE]
sum(dt$win) / len
(1/20)^2
(1/400)*(1/19)*choose(3,2)
(1/400)*(19/20)*choose(3,2)
len <- 100000
dt <- data.table(ID = 1:len, r1  = sample(rolls, len, replace = TRUE), r2 = sample(rolls, len, replace = TRUE), r3 = sample(rolls, len, replace = TRUE))
areTwo20 <- function(x1, x2, x3) {
return( ((x1 == 20 & x2 == 20) | (x1 == 20 & x3 == 20) | (x2 == 20 & x3 == 20)) & !(x1 == 20 & x2 == 20 & x3 == 20) )
}
dt[, win := areTwo20(r1, r2, r3)]
dt[win == TRUE]
sum(dt$win) / len
len <- 10000000
dt <- data.table(ID = 1:len, r1  = sample(rolls, len, replace = TRUE), r2 = sample(rolls, len, replace = TRUE), r3 = sample(rolls, len, replace = TRUE))
areTwo20 <- function(x1, x2, x3) {
return( ((x1 == 20 & x2 == 20) | (x1 == 20 & x3 == 20) | (x2 == 20 & x3 == 20)) & !(x1 == 20 & x2 == 20 & x3 == 20) )
}
dt[, win := areTwo20(r1, r2, r3)]
sum(dt$win) / len
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table, haven, stargazer, plm)
dt <- as.data.table(read_dta("HW1/GMdata.dta"))
dt[, yrsPresent := .N, by = .(index)]
dt[, d357 := (sic3 == 357)]
dt[, yrsRange := max(yr) - min(yr), by = .(index)]
table(dt[, .(yrsPresent, yrsRange)]) # NOTE: the same firm may exit one year and reappear later
fmla.op1 <- "ldsal ~ -1 + lemp + as.factor(yr):d357 + poly(ldnpt, 2) + poly(ldrst, 2) + poly(ldinv, 2) + as.factor(yr)"
lm.op1 <- lm(fmla.op1, data = dt)
stargazer(lm.op1, type = "text", omit = c("d357", "poly"))
# ii)
dt.shift <- copy(dt)
dt.shift[, lemp := shift(lemp, n = 1L, fill = NA, type = "lead"), by = .(index)]
dt.shift[, yr := shift(yr, n = 1L, type = "lead"), by = .(index)]
dt.shift[, d357 := shift(d357, n = 1L, type = "lead"), by = .(index)]
# compute predict sales given this period's employment and year FEs and last period's investment
dt.shift$predSal <- predict(lm.op1, dt.shift)
dt <- merge(dt, dt.shift[, .(yr, index, predSal)], by = c("yr", "index"), all.x = TRUE)
dt[, LHS := ldsal - predSal]
dt[, ldnptDiff := ldnpt - shift(ldnpt, n = 1L, type = "lag"), by = .(index)]
dt[, ldrstDiff := ldrst - shift(ldrst, n = 1L, type = "lag"), by = .(index)]
fmla.op2 <- "LHS ~ -1 + ldnptDiff +  ldrstDiff + as.factor(yr) + as.factor(index)" # TODO: are these the correct FEs?
lm.op2 <- lm(fmla.op2, data = dt)
stargazer(lm.op2, type = "text", omit = c("yr", "index"))
# iii) Use probit model to estimate firm's survival probability
dt[, existsNextYr := (shift(yr, n = 1L, type = "lead") - yr == 5), by = .(index)]
dt[is.na(existsNextYr) & yr != 88, existsNextYr := FALSE]
glm.eNY <- glm(existsNextYr ~ ldnpt + ldrst + ldinv, family =  binomial(link = "probit"),
data = dt)
stargazer(glm.eNY)
stargazer(glm.eNY, type = "text")
?glm
dt$P <- glm.eNY$fitted.values
?predict
dt$P <- predict(glm.eNY, dt, type = "response")
# sanity checks on predicted probabilities of survival
summary(dt[existsNextYr == TRUE, P])
summary(dt[existsNextYr == FALSE, P])
