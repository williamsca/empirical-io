#fit2sls <- systemfit( system, "2SLS", inst = inst, data = railway)
#don't know why the package fails
View(railway)
stargazer(lmDemand, lmSupply, type = "text") # omit = "monthDummy"
View(railway)
library(tidyverse)
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table, haven, stargazer, plm)
# haven: read .dta files
# stargazer: create summary tables
railway <- read_dta("HW2/railway.dta")
rm(list=ls())
railway <- readstata13::read.dta13("~/Desktop/Empirical IO/HW2/railway.dta")
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table, haven, stargazer, plm)
# haven: read .dta files
# stargazer: create summary tables
railway <- read_dta("HW2/railway.dta")
stargazer(railway, type = "text", summary = TRUE, omit = c("week", "month"), omit.summary.stat = c("p25", "p75"))
# Redefine the Month Dummy
month_dummy <- rep(1:12,each=4) #create a sequence such that each month only repeats 4 times
railway$month2 <- rep(month_dummy,times=7)[1:nrow(railway)] #truncate the size
# Define 4 dummy variables
railway$DM1 = ifelse(railway$week >= 28 & railway$week <= 166, 1,0)
railway$DM2 = ifelse(railway$week >= 167 & railway$week <= 181, 1,0)
railway$DM3 = ifelse(railway$week >= 182 & railway$week <= 323, 1,0)
railway$DM4 = ifelse(railway$week >= 324 & railway$week <= 328, 1,0)
#2 Stage Least Square
firstStagePricelm = lm(log(gr) ~ lakes + DM1 + DM2 + DM3 + DM4 + po + month2 , data = railway)
firstStageQuantlm = lm(log(tgq) ~ lakes + DM1 + DM2 + DM3 + DM4 + po + month2 , data = railway)
railway$fittedGR = fitted(firstStagePricelm)
railway$fittedTGQ = fitted(firstStageQuantlm)
lmDemand = lm(log(tgq) ~ lakes + fittedGR  + month2 , data = railway)
lmSupply = lm(log(gr) ~  DM1 + DM2 + DM3 + DM4 + po + fittedTGQ + month2, data = railway)
stargazer(lmDemand, lmSupply, type = "text", omit = "month2")
stargazer(lmDemand, lmSupply, type = "text")
?optim
B <- matrix(c(1, -alpha1, -beta1, 1), nrow = 2)
B <- matrix(c(1, 2, 2, 1), nrow = 2)
B <- matrix(c(1, 2, 2, 1, 1), nrow = 2)
params <- 1:10
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta2 <- params[6]
beta3 <- params[7]
sigma11 <- params[8]
sigma12 <- params[9]
sigma22 <- params[10]
B <- matrix(c(1, -alpha1, -beta1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, alpha2, 0, beta0, 0, beta2), nrow = 2)
Sigma <- matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2)
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table, haven, stargazer, plm)
dt <- as.data.table(read_dta("HW2/railway.dta"))
setcolorder(dt, neworder = c("week", "month", "gr", "tgq", "lakes", "po"))
dt[, month4 := ((floor((week - 1) / 4))) %% 13 + 1]
dt[, year := 1880 + floor((week - 1) / 52)]
dt[ , weekOfYear := seq_len(.N), by = year]
dt[, DM1 := fifelse(inrange(week, 28, 52*3 + 10), 1, 0)]
dt[, DM2 := fifelse(inrange(week, 167, 181), 1, 0)]
dt[, DM3 := fifelse(inrange(week, 182, 323), 1, 0)]
dt[, DM4 := fifelse(week >= 324, 1, 0)]
params <- 1:10
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta2 <- params[6]
beta3 <- params[7]
sigma11 <- params[8]
sigma12 <- params[9]
sigma22 <- params[10]
B <- matrix(c(1, -alpha1, -beta1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, alpha2, 0, beta0, 0, beta2), nrow = 2)
Sigma <- matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2)
Delta
Gamma
B
params <- 1:10
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta2 <- params[6]
beta3 <- params[7]
sigma11 <- params[8]
sigma12 <- params[9]
sigma22 <- params[10]
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta2), nrow = 2)
Sigma <- matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2)
Gamma
Sigma
?pi
pi*2
letters
month.name
transpose
?transpose
(2*pi)^(-1)
det(Sigma)^(-1/2)
det(Sigma)
Sigma
Sigma <- matrix(c(sigma11, sigma12-1, sigma12-1, sigma22), nrow = 2)
det(Sigma)^(-1/2)
det(B)
yt <- matrix(c(10, 4), nrow = 2)
Xt <- matrix(c(1, 1, 1), nrow = 3)
It <- 1
(-1/2)*(B*yt-Gamma*Xt-Delta*It)
yt
B
B %*% yt
(-1/2)*(B%*%yt-Gamma%*%Xt-Delta*It)
t((-1/2)*(B%*%yt-Gamma%*%Xt-Delta*It))
SigmaInv <- solve(matrix(c(sigma11, sigma12-1, sigma12-1, sigma22), nrow = 2))
t((-1/2)*(B%*%yt-Gamma%*%Xt-Delta*It)) %*% SigmaInv
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
t((-1/2)*Omega) %*% SigmaInv %*% Omega
exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega)
?seq(20:10)
seq(20:10)
seq(20:10:-1)
seq(20, 10, -1)
likelihood(seq(20, 10, -1), yt, Xt, It)
# * Columns (3) and (4): ML ----
likelihood <- function(params, yt, Xt, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta2 <- params[6]
beta3 <- params[7]
sigma11 <- params[8]
sigma12 <- params[9]
sigma22 <- params[10]
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta2), nrow = 2)
SigmaInv <- solve(matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2))
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega))
}
likelihood(seq(20, 10, -1), yt, Xt, It)
likelihood(rep(1, 10,), yt, Xt, It)
likelihood(c(rep(1, 9), 2), yt, Xt, It)
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table, haven, stargazer, plm)
# haven: read .dta files
# stargazer: create summary tables
dt <- as.data.table(read_dta("HW2/railway.dta"))
setcolorder(dt, neworder = c("week", "month", "gr", "tgq", "lakes", "po"))
dt[, month4 := ((floor((week - 1) / 4))) %% 13 + 1]
dt[, year := 1880 + floor((week - 1) / 52)]
dt[ , weekOfYear := seq_len(.N), by = year]
dt[, DM1 := fifelse(inrange(week, 28, 52*3 + 10), 1, 0)]
dt[, DM2 := fifelse(inrange(week, 167, 181), 1, 0)]
dt[, DM3 := fifelse(inrange(week, 182, 323), 1, 0)]
dt[, DM4 := fifelse(week >= 324, 1, 0)]
dt[, `:=`(lngr = log(gr), lntgq = log(tgq))]
stargazer(dt, summary  = TRUE, nobs = FALSE, type = "text", keep = c("gr", "tgq", "lakes", "po"))
lm.FSPrice <- lm(lngr ~ lakes + DM1 + DM2 + DM3 + DM4 + po + as.factor(month4),  data = dt)
lm.FSQuant <- lm(lntgq ~ lakes + DM1 + DM2 + DM3 + DM4 + po + as.factor(month4),  data = dt)
dt$grHat <- fitted(lm.FSPrice)
dt$tgqHat <- fitted(lm.FSQuant)
lm.Demand <- lm(lntgq ~ lakes + grHat + month4, data = dt)
lm.Supply <- lm(lngr ~ DM1 + DM2 + DM3 + DM4 + po + tgqHat + as.factor(month4), data = dt)
stargazer(lm.Demand, lm.Supply, type = "text", omit = "month4")
dt[, It := po]
dt[, h := likelihood(params,
matrix(c(lntgq, lngr), nrow = 2),
matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 6),
It)]
# * Columns (3) and (4): ML ----
likelihood <- function(params, yt, Xt, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta2 <- params[6]
beta3 <- params[7]
sigma11 <- params[8]
sigma12 <- params[9]
sigma22 <- params[10]
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta2), nrow = 2)
SigmaInv <- solve(matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2))
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega))
}
params <- c(rep(1, 9), 2)
dt[, h := likelihood(params,
matrix(c(lntgq, lngr), nrow = 2),
matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 6),
It)]
dt[, Yt := matrix(c(lntgq, lngr), nrow = 2)]
View(dt)
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It)]
# * Columns (3) and (4): ML ----
likelihood <- function(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta2 <- params[6]
beta3 <- params[7]
sigma11 <- params[8]
sigma12 <- params[9]
sigma22 <- params[10]
yt <- matrix(c(lntgq, lngr), nrow = 2)
Xt <- matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 6)
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta2), nrow = 2)
SigmaInv <- solve(matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2))
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega))
}
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It)]
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
# * Columns (3) and (4): ML ----
likelihood <- function(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta2 <- params[6]
beta3 <- params[7]
sigma11 <- params[8]
sigma12 <- params[9]
sigma22 <- params[10]
yt <- matrix(c(lntgq, lngr), nrow = 2)
Xt <- matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 1, ncol = 6)
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta2), nrow = 2)
SigmaInv <- solve(matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2))
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega))
}
params <- c(rep(1, 9), 2)
dt[, It := po]
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
# * Columns (3) and (4): ML ----
likelihood <- function(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta21 <- params[6]
beta22 <- params[7]
beta23 <- params[8]
beta24 <- params[9]
beta3 <- params[10]
sigma11 <- params[11]
sigma12 <- params[12]
sigma22 <- params[13]
yt <- matrix(c(lntgq, lngr), nrow = 2)
Xt <- matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 1, ncol = 6)
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta21, 0, beta22, 0, beta23, 0, beta24), nrow = 2)
SigmaInv <- solve(matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2))
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega))
}
params <- c(rep(1, 12), 2)
dt[, It := po]
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
params <- c(rep(1, 12), 2)
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta21 <- params[6]
beta22 <- params[7]
beta23 <- params[8]
beta24 <- params[9]
beta3 <- params[10]
sigma11 <- params[11]
sigma12 <- params[12]
sigma22 <- params[13]
params <- c(rep(1, 12), 2)
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta21 <- params[6]
beta22 <- params[7]
beta23 <- params[8]
beta24 <- params[9]
beta3 <- params[10]
sigma11 <- params[11]
sigma12 <- params[12]
sigma22 <- params[13]
yt <- matrix(c(9, 4), nrow = 2)
Xt <- matrix(c(1, 0, 1, 0, 0, 0), nrow = 1, ncol = 6)
Xt
# * Columns (3) and (4): ML ----
likelihood <- function(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta21 <- params[6]
beta22 <- params[7]
beta23 <- params[8]
beta24 <- params[9]
beta3 <- params[10]
sigma11 <- params[11]
sigma12 <- params[12]
sigma22 <- params[13]
yt <- matrix(c(lntgq, lngr), nrow = 2)
Xt <- matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 6, ncol = 1)
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta21, 0, beta22, 0, beta23, 0, beta24), nrow = 2)
SigmaInv <- solve(matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2))
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega))
}
dt[, It := po]
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
# * Columns (3) and (4): ML ----
likelihood <- function(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta21 <- params[6]
beta22 <- params[7]
beta23 <- params[8]
beta24 <- params[9]
beta3 <- params[10]
sigma11 <- params[11]
sigma12 <- params[12]
sigma22 <- params[13]
yt <- matrix(c(lntgq, lngr), nrow = 2)
Xt <- matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 6, ncol = 1)
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta21, 0, beta22, 0, beta23, 0, beta24), nrow = 2)
Sigma <- matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2)
SigmaInv <- solve(Sigma)
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega))
}
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
View(dt)
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table, haven, stargazer, plm)
# haven: read .dta files
# stargazer: create summary tables
dt <- as.data.table(read_dta("HW2/railway.dta"))
setcolorder(dt, neworder = c("week", "month", "gr", "tgq", "lakes", "po"))
dt[, month4 := ((floor((week - 1) / 4))) %% 13 + 1]
dt[, year := 1880 + floor((week - 1) / 52)]
dt[ , weekOfYear := seq_len(.N), by = year]
dt[, DM1 := fifelse(inrange(week, 28, 52*3 + 10), 1, 0)]
dt[, DM2 := fifelse(inrange(week, 167, 181), 1, 0)]
dt[, DM3 := fifelse(inrange(week, 182, 323), 1, 0)]
dt[, DM4 := fifelse(week >= 324, 1, 0)]
dt[, `:=`(lngr = log(gr), lntgq = log(tgq))]
# * Columns (3) and (4): ML ----
likelihood <- function(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta21 <- params[6]
beta22 <- params[7]
beta23 <- params[8]
beta24 <- params[9]
beta3 <- params[10]
sigma11 <- params[11]
sigma12 <- params[12]
sigma22 <- params[13]
yt <- matrix(c(lntgq, lngr), nrow = 2)
Xt <- matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 6, ncol = 1)
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta21, 0, beta22, 0, beta23, 0, beta24), nrow = 2)
Sigma <- matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2)
SigmaInv <- solve(Sigma)
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return(log((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega)))
}
params <- c(rep(1, 12), 2)
dt[, It := po]
dt[, h := likelihood(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
View(dt)
?optim
rm(list = ls())
dir <- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(dir)
pacman::p_load(data.table, haven, stargazer, plm)
# haven: read .dta files
# stargazer: create summary tables
dt <- as.data.table(read_dta("HW2/railway.dta"))
setcolorder(dt, neworder = c("week", "month", "gr", "tgq", "lakes", "po"))
dt[, month4 := ((floor((week - 1) / 4))) %% 13 + 1]
dt[, year := 1880 + floor((week - 1) / 52)]
dt[ , weekOfYear := seq_len(.N), by = year]
dt[, DM1 := fifelse(inrange(week, 28, 52*3 + 10), 1, 0)]
dt[, DM2 := fifelse(inrange(week, 167, 181), 1, 0)]
dt[, DM3 := fifelse(inrange(week, 182, 323), 1, 0)]
dt[, DM4 := fifelse(week >= 324, 1, 0)]
dt[, `:=`(lngr = log(gr), lntgq = log(tgq))]
# * Columns (3) and (4): ML ----
h_density <- function(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It) {
alpha0 <- params[1]
alpha1 <- params[2]
alpha2 <- params[3]
beta0 <- params[4]
beta1 <- params[5]
beta21 <- params[6]
beta22 <- params[7]
beta23 <- params[8]
beta24 <- params[9]
beta3 <- params[10]
sigma11 <- params[11]
sigma12 <- params[12]
sigma22 <- params[13]
yt <- matrix(c(lntgq, lngr), nrow = 2)
Xt <- matrix(c(1, lakes, DM1, DM2, DM3, DM4), nrow = 6, ncol = 1)
B <- matrix(c(1, -beta1, -alpha1, 1), nrow = 2, ncol = 2)
Delta <- matrix(c(0, beta3), nrow = 2)
Gamma <- matrix(c(alpha0, beta0, alpha2, 0, 0, beta21, 0, beta22, 0, beta23, 0, beta24), nrow = 2)
Sigma <- matrix(c(sigma11, sigma12, sigma12, sigma22), nrow = 2)
SigmaInv <- solve(Sigma)
Omega <- (B%*%yt-Gamma%*%Xt-Delta*It)
return(log((2*pi)^(-1)*det(Sigma)^(-1/2)*det(B)*exp(t((-1/2)*Omega) %*% SigmaInv %*% Omega)))
}
Likelihood <- function(params, dt) {
dt[, h := h_density(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
return(sum(dt$h))
}
params <- c(rep(1, 12), 2)
dt[, It := po]
optim(params, Likelihood, dt)
optim(params, Likelihood, dt = dt)
guess <- c(9, -1, -1, -3, 0, 0, 0, 0, 0, .5, .5, 0, .5)
optim(guess, Likelihood, dt = dt)
optim.po <- optim(guess, Likelihood, dt = dt)
Likelihood <- function(params) {
dt[, h := h_density(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
return(-sum(dt$h))
}
guess <- c(9, -1, -1, -3, 0, 0, 0, 0, 0, .5, .5, 0, .5)
mle.po <- mle(Likelihood, start = guess, nobs = nrow(dt))
pacman::p_load(data.table, haven, stargazer, stats4)
mle.po <- mle(Likelihood, start = guess, nobs = nrow(dt))
mle.po <- mle(Likelihood, start = c(1), nobs = nrow(dt))
Likelihood <- function(alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22) {
params <- c(alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22)
dt[, h := h_density(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
return(-sum(dt$h))
}
guess <- c(9, -1, -1, -3, 0, 0, 0, 0, 0, .5, .5, 0, .5)
mle.po <- mle(Likelihood, start = c(1), nobs = nrow(dt))
guess <- c(9, -1, -1, -3, 0, 0, 0, 0, 0, .5, .5, 0, .5)
mle.po <- mle(Likelihood, start = guess, nobs = nrow(dt))
Likelihood <- function(alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22) {
params <- c(alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22)
dt[, h := h_density(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
return(sum(dt$h))
}
mle.po <- mle(Likelihood, start = guess, nobs = nrow(dt))
optim.po <- optim(par = guess, Likelihood)
Likelihood <- function(params) { # alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22
# params <- c(alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22)
dt[, h := h_density(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
return(sum(dt$h))
}
optim.po <- optim(par = guess, Likelihood)
optim.po
Likelihood <- function(params) { # alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22
# params <- c(alpha0, alpha1, alpha2, beta0, beta1, beta21, beta22, beta23, beta24, beta3, sigma11, sigma12, sigma22)
dt[, h := h_density(params, lntgq, lngr, lakes, DM1, DM2, DM3, DM4, It), by = seq_len(nrow(dt))]
return(-sum(dt$h))
}
optim.po <- optim(par = guess, Likelihood)
optim.po
